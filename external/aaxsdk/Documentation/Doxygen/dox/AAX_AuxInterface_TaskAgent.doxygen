/*===================================================================================================
AAX_AuxInterface_TaskAgent.doxygen

Copyright 2023 Avid Technology, Inc. 
All rights reserved.

CONFIDENTIAL: this document contains confidential information of Avid. Do
not disclose to any third party. Use of the information contained in this
document is subject to an Avid SDK license.

===================================================================================================*/

/** @defgroup AuxInterface_TaskAgent Task agent interface
	@ingroup AdditionalFeatures

	@brief A mechanism for hosts to request that plug-ins perform tasks

		<EM>This interface represents an optional component that you can add to your plug-in in
		order to support extended features of the %AAX SDK.</EM>

		\compatibility This interface is not yet used in any %AAX hosts

		The plug-in implements an \ref AAX_ITaskAgent, which is used by the host to add or
		cancel tasks.

		The host implements \ref AAX_IACFTask for task objects representing each task that it
		wants the plug-in to perform.

		To request a task, the host adds a task object to the plug-in's task agent interface.

		The type of each task is identified with a four-char ID. If additional arbitrary data is
		necessary to describe the task it is provided via \ref AAX_IDataBuffer "data buffers".
		
		The plug-in checks this data to understand what work needs to be done, then performs the
		task. The task may be, and usually is, executed asynchronously. The plug-in optionally
		updates the task progress as it proceedds, then calls \ref AAX_ITask::SetDone() when the work
		is completed. If the task involves returning data back to the host, the plug-in first
		calls \ref AAX_ITask::AddResult() one or more times to provide the data via data buffers.

		To be available as a task agent, the plug-in's task agent implementation must be
		registered with the host in the plug-in's  Description callback like other process
		pointers. To add this interface to your plug-in at describe time, call
		\ref AAX_IEffectDescriptor::AddProcPtr() using the \ref kAAX_ProcPtrID_Create_TaskAgent
		selector.
		
	\section auxinterface_task_modulecommunication Communicating with other modules
		
		Like other modules, the task agent interface is provided with a reference to the
		plug-in's \ref AAX_IEffectDirectData object at initialization. In order to transfer data
		between a plug-in's \ref AAX_IEffectDirectData object and its other objects, dedicated
		custom data methods in those objects' interfaces should be used.  For example, to
		communicate with the plug-in's data model, use \ref AAX_IEffectParameters::GetCustomData()
		and \ref AAX_IEffectParameters::SetCustomData() .
*/
